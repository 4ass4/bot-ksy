#!/usr/bin/env node

// –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
const fs = require('fs');
const path = require('path');

console.log('üîç –û—Ç–ª–∞–¥–∫–∞ Telegram-–±–æ—Ç–∞ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if (!fs.existsSync('.env')) {
  console.log('‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env.example –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
  console.log('   cp env.example .env');
  console.log('   # –ó–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –∏ –¥–æ–±–∞–≤—å—Ç–µ:');
  console.log('   # BOT_TOKEN=your_bot_token_here');
  console.log('   # ADMIN_IDS=your_telegram_id_here');
  process.exit(1);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env
const envContent = fs.readFileSync('.env', 'utf8');
const botToken = envContent.match(/BOT_TOKEN=(.+)/)?.[1];
const adminIds = envContent.match(/ADMIN_IDS=(.+)/)?.[1];

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
console.log(`‚úÖ BOT_TOKEN: ${botToken ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);
console.log(`‚úÖ ADMIN_IDS: ${adminIds ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –ù–ê–ô–î–ï–ù'}`);

if (!botToken || botToken === 'your_bot_token_here') {
  console.log('\n‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
  console.log('üí° –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env');
}

if (!adminIds || adminIds === 'your_telegram_id_here') {
  console.log('\n‚ùå ADMIN_IDS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
  console.log('üí° –ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à ID —É @userinfobot –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:');
try {
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  const requiredDeps = ['grammy', 'sqlite3', 'node-cron', 'dotenv'];
  
  requiredDeps.forEach(dep => {
    if (packageJson.dependencies && packageJson.dependencies[dep]) {
      console.log(`‚úÖ ${dep}: ${packageJson.dependencies[dep]}`);
    } else {
      console.log(`‚ùå ${dep}: –ù–ï –ù–ê–ô–î–ï–ù`);
    }
  });
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
console.log('\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
const dbPath = './database/bot.db';
if (fs.existsSync(dbPath)) {
  console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${dbPath}`);
} else {
  console.log(`‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${dbPath}`);
  console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: npm run migrate');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:');
const distPath = './dist';
if (fs.existsSync(distPath)) {
  console.log('‚úÖ –ü–∞–ø–∫–∞ dist —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
  const distFiles = fs.readdirSync(distPath);
  console.log(`üìÅ –§–∞–π–ª—ã –≤ dist: ${distFiles.join(', ')}`);
} else {
  console.log('‚ùå –ü–∞–ø–∫–∞ dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  console.log('üí° –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run build');
}

console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .env –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install');
console.log('3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: npm run migrate');
console.log('4. –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run build');
console.log('5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: npm run dev');

console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'); 