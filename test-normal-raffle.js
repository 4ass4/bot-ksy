import Database from './dist/database/database.js';
import { RaffleService } from './dist/services/raffleService.js';
import { UserService } from './dist/services/userService.js';
import dotenv from 'dotenv';

dotenv.config();

const DATABASE_PATH = process.env.DATABASE_PATH || './database/bot.db';

async function testNormalRaffle() {
  const db = new Database(DATABASE_PATH);
  const raffleService = new RaffleService(db);
  const userService = new UserService(db);

  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ (–±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)...\n');

    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üë• –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const testUsers = [];
    for (let i = 1; i <= 5; i++) {
      const user = await userService.createUser(
        2000000 + i,
        `–û–±—ã—á–Ω—ã–π${i}`,
        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        `normaluser${i}`
      );
      testUsers.push(user);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.first_name} (ID: ${user.id})`);
    }

    // 2. –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à (–±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)
    console.log('\nüéÅ –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à...');
    const raffle = await raffleService.createRaffle(
      '–û–±—ã—á–Ω—ã–π –ø—Ä–∏–∑ –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', // prizeDescription
      2, // winnersCount
      new Date(Date.now() + 60000), // endDate
      [], // channelIds
      undefined, // photoFileId
      undefined, // videoFileId
      false, // referralRequirement (–ë–ï–ó —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)
      0, // minReferrals
      0, // maxReferrals
      undefined, // referralBonus
      1.0 // bonusMultiplier
    );
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ä–æ–∑—ã–≥—Ä—ã—à: ${raffle.prize_description} (ID: ${raffle.id})`);

    // 3. –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (–≤—Å–µ —Å 0 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)
    console.log('\nüìù –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...');
    for (let i = 0; i < testUsers.length; i++) {
      await raffleService.addParticipant(testUsers[i].id, raffle.id, true, 0);
      console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —É—á–∞—Å—Ç–Ω–∏–∫: ${testUsers[i].first_name} (0 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤)`);
    }

    // 4. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    console.log('\nüìä –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...');
    const participants = await raffleService.getEligibleParticipants(raffle.id);
    console.log(`üìà –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${participants.length}`);

    // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    console.log('\nüìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:');
    participants.forEach((participant, index) => {
      const user = testUsers.find(u => u.id === participant.user_id);
      const multiplier = raffleService.calculateBonusMultiplier(participant.referral_count);
      console.log(`${index + 1}. ${user.first_name}: ${participant.referral_count} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ ‚Üí –º–Ω–æ–∂–∏—Ç–µ–ª—å ${multiplier}x`);
    });

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
    console.log('\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π...');
    const winners = raffleService.selectWinnersWithWeights(participants, 2);
    
    console.log('\nüèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏:');
    winners.forEach((winner, index) => {
      const user = testUsers.find(u => u.id === winner.user_id);
      const multiplier = raffleService.calculateBonusMultiplier(winner.referral_count);
      console.log(`${index + 1}. ${user.first_name} (${winner.referral_count} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤, –º–Ω–æ–∂–∏—Ç–µ–ª—å ${multiplier}x)`);
    });

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await db.close();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testNormalRaffle().catch(console.error); 